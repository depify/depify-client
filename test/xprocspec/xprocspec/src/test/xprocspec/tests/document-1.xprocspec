<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.daisy.org/ns/xprocspec/xprocspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<x:description xmlns:c="http://www.w3.org/ns/xproc-step" xmlns:x="http://www.daisy.org/ns/xprocspec" xmlns:e="http://example.net/ns" script="../steps/identity.xpl">

    <x:scenario label="identity">
        <x:call step="e:identity">
            <x:option name="option.required" select="''"/>
            <x:input port="source.document.secondary.sequence">
                <x:document type="inline">
                    <doc1/>
                </x:document>
                <x:document type="inline">
                    <doc2/>
                </x:document>
            </x:input>
        </x:call>

        <!-- output port -->
        <x:context label="the options">
            <x:document type="port" port="options"/>
        </x:context>
        <x:expect type="count" label="There should be a single document on the options port" min="1" max="1"/>

        <!-- input port -->
        <x:context label="the primary input port">
            <x:document type="port" port="source.document.primary"/>
        </x:context>
        <x:expect type="count" label="There should be a single document on the primary input port" min="1" max="1"/>

        <!-- errors -->
        <x:context label="the errors">
            <x:document type="errors"/>
        </x:context>
        <x:expect type="count" label="There should be no errors" max="0"/>

        <!-- external document -->
        <x:context label="the xprocspec test document">
            <x:document type="file" href="document-1.xprocspec"/>
        </x:context>
        <x:expect type="xpath" label="The loaded document should be itself (x:description as root element)" test="local-name(/*)" equals="'description'"/>
        <x:expect type="xpath" label="The base URI should be that of the xprocspec test document" test="base-uri(/*)" equals="$test-base-uri"/>

        <!-- inline document -->
        <x:context label="an inline 'test' element">
            <x:document type="inline">
                <test/>
            </x:document>
        </x:context>
        <x:expect type="count" label="There should be one inline document" min="1" max="1"/>
        <x:expect type="xpath" label="The inline document should have a 'test' root element" test="local-name(/*)" equals="'test'"/>
        <x:expect type="xpath" label="The base URI should be that of the xprocspec test document" test="base-uri(/*)" equals="$test-base-uri"/>

        <!-- inline document with base uri -->
        <x:context label="an inline 'test' element with base-uri set to 'temp-dir'">
            <x:document type="inline" base-uri="temp-dir">
                <test/>
            </x:document>
        </x:context>
        <x:expect type="xpath" label="The base URI should be that of the temporary directory" test="base-uri(/*)" equals="$temp-dir"/>

        <!-- inline document with base uri and relative xml:base and a relative xml:base on the inline document -->
        <x:context label="an inline 'test' element with base-uri set to 'temp-dir' and the document element having a relative xml:base">
            <x:document type="inline" base-uri="temp-dir">
                <test xml:base="file.xml"/>
            </x:document>
        </x:context>
        <x:expect type="xpath" label="The base URI should be that of the temporary directory" test="base-uri(/*)" equals="resolve-uri('file.xml',$temp-dir)"/>

        <!-- directory listing -->
        <x:context label="the './document-1.resources/' directory; non-recursive">
            <x:document type="directory" href="document-1.resources"/>
        </x:context>
        <x:expect type="compare" label="The directory listing should equal the predefined non-recursive directory listing">
            <x:document type="inline">
                <c:directory name="document-1.resources">
                    <c:file name="html5.html"/>
                    <c:file name="image.png"/>
                    <c:directory name="recursive1"/>
                    <c:directory name="recursive2"/>
                    <c:file name="text.txt"/>
                    <c:file name="xhtml5.html"/>
                    <c:file name="xml.xml"/>
                </c:directory>
            </x:document>
        </x:expect>

        <!-- directory listing (recursive) -->
        <x:context label="the './document-1.resources/' directory; recursive">
            <x:document type="directory" href="document-1.resources" recursive="true"/>
        </x:context>
        <x:expect type="compare" label="The directory listing should equal the predefined recursive directory listing">
            <x:document type="inline">
                <c:directory name="document-1.resources">
                    <c:file name="html5.html"/>
                    <c:file name="image.png"/>
                    <c:directory name="recursive1">
                        <c:file name="file1"/>
                        <c:file name="file2"/>
                        <c:directory name="recursive11">
                            <c:file name="file11"/>
                            <c:file name="file12"/>
                            <c:file name="file13"/>
                        </c:directory>
                        <c:directory name="recursive12">
                            <c:file name="file21"/>
                        </c:directory>
                    </c:directory>
                    <c:directory name="recursive2">
                        <c:file name="file21"/>
                    </c:directory>
                    <c:file name="text.txt"/>
                    <c:file name="xhtml5.html"/>
                    <c:file name="xml.xml"/>
                </c:directory>
            </x:document>
        </x:expect>

        <!-- the position attribute (position=1) -->
        <x:context label="The [doc1,doc2] sequence: position=1">
            <x:document type="port" port="result.document.secondary.sequence" position="1"/>
        </x:context>
        <x:expect label="Should be doc1" type="compare">
            <x:document type="inline">
                <doc1/>
            </x:document>
        </x:expect>

        <!-- the position attribute (position=2) -->
        <x:context label="The [doc1,doc2] sequence: position=2">
            <x:document type="port" port="result.document.secondary.sequence" position="2"/>
        </x:context>
        <x:expect label="Should be doc2" type="compare">
            <x:document type="inline">
                <doc2/>
            </x:document>
        </x:expect>

        <!-- the position attribute (position=all) -->
        <x:context label="The [doc1,doc2] sequence: position=all">
            <x:document type="port" port="result.document.secondary.sequence" position="all"/>
        </x:context>
        <x:expect label="Should be both doc1 and doc2" type="compare">
            <x:document type="inline">
                <doc1/>
            </x:document>
            <x:document type="inline">
                <doc2/>
            </x:document>
        </x:expect>

        <!-- the position attribute (position=last) -->
        <x:context label="The [doc1,doc2] sequence: position=last">
            <x:document type="port" port="result.document.secondary.sequence" position="last"/>
        </x:context>
        <x:expect label="Should be doc2" type="compare">
            <x:document type="inline">
                <doc2/>
            </x:document>
        </x:expect>

        <!-- test loading of text file -->
        <x:context label="A text file">
            <x:document type="file" method="text" href="document-1.resources/text.txt"/>
        </x:context>
        <x:expect label="Should contain the expected text" type="compare">
            <x:document type="inline">
                <c:body><![CDATA[This is a text file.
It has two lines.]]></c:body>
            </x:document>
        </x:expect>

        <!-- test loading of binary file -->
        <x:context label="A binary file (image file)">
            <x:document type="file" method="binary" href="document-1.resources/image.png"/>
        </x:context>
        <x:expect label="Should contain the expected bytes" type="compare">
            <x:document type="inline">
                <c:body><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAFcAAAASCAYAAAAuXUKzAAAABmJLR0QA/wD/AP+gvaeTAAAACXBI
WXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3QkEDg4ejhRtkAAAABl0RVh0Q29tbWVudABDcmVhdGVk
IHdpdGggR0lNUFeBDhcAAAQwSURBVFjD7VjPK3xfGH7ujPFryIwUGsOGBRNJ5EcWdiTFMCRWElYW
pOEPsBpLOyNSRBYUjQ2iFJIpZTVTg81s6GIajZFpns/i+3UZc5kx+Man71tn8973Ped5n3vu855z
BQAEAJKIZIIgINrYn24ejwejo6Ow2Wxwu90gCZKyNX6mbv6TF9k+EvvTra+vT6rnZV1yNcZat+JD
b+Hft/s3mM1mAwBsbGwgEAhIdX1ljcJHZOFvMoVCAZIIBoPSZ//VcijtXJ/Ph4GBAWRkZCA1NRVG
oxEXFxdhi7wG8uTz+Xzo7e1FWloaMjIyMDY2FgZmc3MTTU1N0Gg0SE5ORk1NDba3t2WLEQQB9/f3
GBwcRGZmJuLi4uB0OqFUKqFWqyGKYlje7e0tUlJSoFQq4XA43iRKEAQJm0KhkHwvRzQ2Pz+Puro6
aDQaJCQkID8/H2azGR6PJ1RzW1tbwzQoJyeHoii+qz1PPpPJFJY/OTkpG/tyqFQqHh8fy8a1tbWF
aWJ7ezsBcHx8PEzjLBYLAbClpSVi34g03tPcYDDIrq6uN3MNBgM9Hg8lcvPy8ri7u0uv18udnR3m
5uYSAM1mc1TklpWV8fT0lLe3t+zv7ycAlpeXh8SaTCba7Xb6/X66XC4ajUYCYGdnp+ycOp2ONpuN
Xq9Xema32wmA2dnZfHh4kPyPj4/U6/UEwP39/ZibczTkWq1WafMtLy/z6uqKPp+P+/v7rKioIACO
jo4+k7u2thYy4erqKgGwsLAwqoUPDw8ln9vtJgCq1ep3C7y8vCQA6vV62TlXVlZk8+rr6wmAs7Oz
km9paYkAWFtb+6mTTzTkVlZWEgD39vbC8l0uFwGwoKDgmdybm5uQoOvrawJgYmJiVAv7/f6Qz+Z1
bCAQ4MTEBEtLS5mcnBzyGcXHx8vOeX19LUvM7u4uAbCkpETyVVVVyW6S7yD3Nf635O7LyI0Ecmho
KGaNk7OamhoC4ObmJg8ODgiARUVFDAaD305uUlJStNr9NbIQCWR6ejoBcG5ujqIoMhAIUBTFmMld
X18nADY0NLCjo4MAODMzE/UB/zPklpeXEwCPjo4irfE1DS0SSK1WSwBcXV2VGtrL08BHyQ0Ggywu
LqYgCFQqldTpdCEN7jvJnZmZIQBmZWXRarXy/PycPp+Pfr+fDoeDU1NTrK6ufib3qXPHehSLBFLu
6NLS0vKp6+bCwoIUa7FYPnQ1/Qy5JDk4OBi9LNzd3bG3t5darZZqtZrNzc08OzuLaWE5vyiK7O7u
Znp6OjUaDXt6euj1ej9FrtPpJACmpaXR4/H8p+SS5NbWFk0mE3U6HVUqFZOSkmgwGDg8PMyTkxP+
6r8w09PTBMCRkZEfiU/xW/8N3NzcYHFxEQDQ09PzIzHG/UZiX979GxsbUVRU9D+5X2mJiYmoq6uD
1Wr9sRj/AOniXBAMU5s4AAAAAElFTkSuQmCC]]></c:body>
            </x:document>
        </x:expect>

        <!-- test loading of xhtml5 file -->
        <x:context label="An XHTML5 file (well-formed XML)">
            <x:document type="file" method="html" href="document-1.resources/xhtml5.html"/>
        </x:context>
        <x:expect label="Should contain the expected content" type="compare">
            <x:document type="inline">
                <html xmlns="http://www.w3.org/1999/xhtml">
                    <head>
                        <title>Title</title>
                    </head>
                    <body>
                        <h1>XHTML5</h1>
                        <p>This is an HTML5-file which is well-formed XML.</p>
                    </body>
                </html>
            </x:document>
        </x:expect>

        <!-- test loading of html5 file -->
        <x:pending label="validator.nu html parser required; HTML5 tests are excluded by default since p:step-available cannot be used in a static context (i.e. inside a p:use-when)">
            <x:context label="An HTML5 file (not well-formed XML)">
                <x:document type="file" method="html" href="document-1.resources/html5.html"/>
            </x:context>
            <x:expect label="Should contain the expected content" type="compare">
                <x:document type="inline">
                    <html xmlns="http://www.w3.org/1999/xhtml">
                        <head>
                            <title>Title</title>
                        </head>
                        <body>
                            <h1>HTML5</h1>
                            <p>This is a <b><i>HTML5</i></b><i>-file</i> which is *not* well-formed XML.</p>
                        </body>
                    </html>
                </x:document>
            </x:expect>
        </x:pending>

        <!-- test using select expression -->
        <x:context label="Portions of an XML document selected using the select attribute">
            <x:document type="inline" select="//span">
                <doc>
                    <span id="1"/>
                    <p>
                        <span id="2"/>
                        <span id="3"/>
                    </p>
                    <span id="4">
                        <span id="5"/>
                    </span>
                </doc>
            </x:document>
        </x:context>
        <x:expect label="There should be a sequence of five spans (id=1,2,3,4,5)" type="compare">
            <x:document type="inline">
                <span xmlns="" id="1"/>
            </x:document>
            <x:document type="inline">
                <span xmlns="" id="2"/>
            </x:document>
            <x:document type="inline">
                <span xmlns="" id="3"/>
            </x:document>
            <x:document type="inline">
                <span xmlns="" id="4">
                    <span id="5"/>
                </span>
            </x:document>
            <x:document type="inline">
                <span xmlns="" id="5"/>
            </x:document>
        </x:expect>

        <!-- test using select expression and named namespace -->
        <x:context label="Portions of an XML document selected using the select attribute which references a namespace using a namespace prefix" xmlns:xyz="asdf">
            <x:document type="inline" select="//xyz:element">
                <doc>
                    <xyz:element/>
                    <xyz:element/>
                </doc>
            </x:document>
        </x:context>
        <x:expect label="There should be a sequence of two `xyz:element` elements" type="compare" xmlns:xyz="asdf">
            <x:document type="inline">
                <xyz:element/>
            </x:document>
            <x:document type="inline">
                <xyz:element/>
            </x:document>
        </x:expect>
        
        <!-- test using select expression and default namespace -->
        <x:context label="Portions of an XML document selected using the select attribute which references a namespace using the default namespace (xmlns='...')" xmlns="asdf">
            <x:document type="inline" select="//element">
                <doc>
                    <element xmlns="asdf"/>
                    <element xmlns="asdf"/>
                </doc>
            </x:document>
        </x:context>
        <x:expect label="There should be a sequence of two `element` elements" type="compare">
            <x:document type="inline">
                <element xmlns="asdf"/>
            </x:document>
            <x:document type="inline">
                <element xmlns="asdf"/>
            </x:document>
        </x:expect>
    </x:scenario>

</x:description>
