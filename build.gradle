buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven { url "http://maven.restlet.org" }
    maven { url "http://developer.marklogic.com/maven2" }
  }
  dependencies {
    classpath 'com.thaiopensource:jing:20091111'
    classpath group: 'com.xmlcalabash', name:'xmlcalabash', version:'1.0.29-96'
    classpath 'com.bmuschko:gradle-izpack-plugin:2.0'
  }
}

plugins {
  id "java"
  id "maven"
  id "com.bmuschko.izpack" version "2.0"
  id "de.undercouch.download" version "1.2"
}

//defaultTasks 'assemble', 'test'
//ant.importBuild 'build.xml'

import de.undercouch.gradle.tasks.download.Download

repositories {
  mavenCentral()
  maven { url "http://maven.restlet.org" }
  maven { url "http://developer.marklogic.com/maven2" }
}

dependencies {
    izpack 'org.codehaus.izpack:izpack-standalone-compiler:4.3.4'
    compile ([group: 'com.xmlcalabash', name:'xmlcalabash', version:'1.0.29-96'])
}

project.ext.releaseVersion = version

import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction
import com.xmlcalabash.drivers.Main

class CalabashClientTestTask extends DefaultTask {

@TaskAction
  def calabashAction() {
    def args = [
        "-isource=test/test.xprocspec",
    	"-oresult=test/target/test.xml",
    	"-ohtml=test/target/test.html",
        "-ojunit=test/target/test-junit.xml",
      	"test/xprocspec/xprocspec/src/main/resources/content/xml/xproc/xprocspec.xpl"
    ]
    Main.main(args as String[]) 
  }
}

class CalabashImplTestTask extends DefaultTask {

@TaskAction
  def calabashAction() {
    def args = [
        "-isource=test/impl.xprocspec",
    	"-oresult=test/target/impl.xml",
    	"-ohtml=test/target/impl.html",
        "-ojunit=test/target/impl-junit.xml",
      	"test/xprocspec/xprocspec/src/main/resources/content/xml/xproc/xprocspec.xpl"
    ]
    Main.main(args as String[])
  }
}

task testClient(type: CalabashClientTestTask){
    println 'running client unit tests'
}

task testImpl(type: CalabashImplTestTask){
    println 'running impl unit tests'
}

izpack {
  baseDir = file("build/dist")
  installFile = file("etc/install.xml")
  outputFile = file("build/distributions/depify-" + version + ".jar")
}

task generateVERSION() << {
  def outputFile = new File("$buildDir/dist", "VERSION")
  outputFile.withPrintWriter { writer ->
    writer.println version
  }
}

task copyStuff(type: Copy) {
  from 'LICENSE'
  from 'src/client/commandline/depify'
  from 'src/client/commandline/depify.bat'
  from 'etc/saxon.xml'
  from 'etc/xmlcalabash.xml'
  from 'etc/resolver.properties'
  from 'etc/catalog.xml'
  into 'build/dist/'
}

task copyXProc(type: Copy) {
  from 'src/client/xproc'
  into 'build/dist/libs/xproc'
}

task copyLib(type: Copy) {
  FileCollection runtime  = configurations.runtime
  FileCollection lib = runtime

  //temporary hack
  lib = lib + files(["lib/httpclient-4.2.5.jar"])
  lib = lib + files(["lib/httpcore-4.2.4.jar"])
  
  from lib
  into { "build/dist/deps/xmlcalabash/lib" }
}

task tempLib(type: Copy) {
  from "lib/calabash.jar"
  into "build/dist/deps/xmlcalabash" 
}

task copyToDist(dependsOn: [copyStuff,copyXProc,copyLib,tempLib]){
}

task dist(dependsOn: [copyToDist,izPackCreateInstaller]){
}

