#!/bin/bash

# Copyright (c) 2015 Jim Fuller  
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0
  
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#identify env
cygwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true;;
esac

if [ -z "$JAVA" ]; then
    JAVA=java
fi

function real_dir() {
    SOURCE="$1"
    while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	SOURCE="$(readlink "$SOURCE")"
	[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    echo "$( cd -P "$( dirname "$SOURCE" )" && pwd  )"
}

DEPIFY_DIR=$(real_dir "${BASH_SOURCE[0]}")
CURRENTDIR=$(real_dir .)


#default values
#####################################################################
COMMAND=$1 
PACKAGE=$2
VERSION=$3
VERSION=${VERSION:-latest}
INITREPO=$4
APP_DIR=$CURRENTDIR
LIB_DIR=/lib/
DEPIFY_CONFIG=.depify.xml
LOG4J= #-Dlog4j.configurationFile=/Users/jfuller/test/log4j.xml
QUIET=0
#####################################################################

while getopts 'c:p:v:a::l:h' OPTION
do
case $OPTION in
    c) COMMAND="$OPTARG";;
    p) PACKAGE="$OPTARG";;
    v) VERSION="$OPTARG";;
    r) INITREPO="$OPTARG";;
    a) APP_DIR="$OPTARG";;
    a) LIB_DIR="$OPTARG";;
    *)
      usage
      exit 1;
  esac
done

if [[ $# -eq 0 ]] ; then
    COMMAND="usage"
    PACKAGE=""
    VERSION=""
fi

if [ "$1" == "help" ]; then
    COMMAND="usage"
    PACKAGE=""
    VERSION=""
fi

CLASSPATH="$CLASSPATH:$DEPIFY_DIR/resolver.properties"

CURRENTDIR_URI=file:"$CURRENTDIR"

# Is it a Windows Java binary?
javawin0=$("$JAVA" -XshowSettings:properties 2>&1 |grep 'os\.name' | grep Windows > /dev/null; echo $?)

if [[ $cygwin && $javawin0 -eq 0 ]]; then
  CLASSPATH=$(cygpath -map $CLASSPATH)
  DEPIFY_DIR=$(cygpath -ma $DEPIFY_DIR)
  CURRENTDIR_URI=file:/$(cygpath -ma $CURRENTDIR)
fi

# Put it in a list so that we can haz whitespace in the expanded variables:
depify_run=("$JAVA" $LOG4J -cp "$CLASSPATH" -jar $DEPIFY_DIR/deps/xmlcalabash/calabash.jar --config  $DEPIFY_DIR/xmlcalabash.xml --saxon-configuration $DEPIFY_DIR/saxon.xml -isource=$CURRENTDIR_URI/.depify.xml -oresult=- -Xtransparent-json $DEPIFY_DIR/libs/xproc/depify.xpl command="$COMMAND" package="$PACKAGE" version=$VERSION init-repo-uri="$INITREPO" app_dir=$APP_DIR app_dir_lib=$LIB_DIR depify_config=$DEPIFY_CONFIG depify_dir=$DEPIFY_DIR)

# create lib directory if it does not exist
if [ ! -d ".$LIB_DIR" ]; then
mkdir .$LIB_DIR
fi

# create empty depify.xml if it does not exist (run depify init)
if  [ ! -e "$CURRENTDIR/.depify.xml" ]; then
    # run xproc pipeline
    echo '<depify xmlns="https://github.com/xquery/depify"/>' > "$CURRENTDIR"/.depify.xml
fi

if [[ $QUIET -eq 0 ]] ; then
    echo "depify 1.0 | copyright (c)2015 Jim Fuller | see https://github.com/depify"
fi

# run xproc pipeline
echo -e $("${depify_run[@]}")
